% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unnest_term_list.R
\name{unnest_term_list}
\alias{unnest_term_list}
\title{Unnest a Nested Term List}
\usage{
unnest_term_list(term.list, ...)
}
\arguments{
\item{term.list}{A list of named character vectors.  `code{term_count} can
be used in a hierarchical fashion as well; that is a list of regexes can be
passed and counted and then a second (or more) pass can be taken wit a new
set of regexes on only those rows/text elements that were left untagged
(count \code{\link[base]{rowSums}} is zero).  This is accomplished by passing
a \code{\link[base]{list}} of \code{\link[base]{list}}s of regexes.
See \bold{Examples} for the \strong{hierarchical terms} section for a
demonstration.}

\item{\ldots}{ignored.}
}
\value{
Returns a \code{\link[base]{list}} of one level.
}
\description{
Term lists can be stored as lists within a list for use in \code{termc_count}
in a hierarchical fashion.  This structure is not always useful and can be
taken to a single nest via \code{unnest_term_list}.  The function detects if
the \code{term.list} is nested or not and then unnests only if needed, thus
allowing it to be safely used on both nested and unnested \code{term.list}s.
}
\keyword{term.list}
\keyword{unnest}

